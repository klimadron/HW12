- hosts: sql
  become_user: root
  become: true
  any_errors_fatal: true
  vars:
    mysql_root: 'password'
  roles:
    - role: mrlesmithjr.netplan
      become: yes
      # This role will do nothing unless netplan_enabled is true.
      netplan_enabled: true
      
      # This should point to an existing netplan configuration file 
      # on your system which this role will overwrite, 
      # or to a nonexistent file which netplan is aware of.
      #
      # The default is /etc/netplan/config.yaml.
      netplan_config_file: /etc/netplan/50-vagrant.yaml
      
      # Ubuntu 18.04, for example, defaults to using networkd.
      netplan_renderer: networkd
      # Simple network configuration to add a single network interface.
      # Configuration defined bellow will be written to the file defined
      # above in `netplan_config_file`.
      netplan_configuration:
        network:
          version: 2
          renderer: networkd
          ethernets:
            enp0s3:
              addresses: [10.0.2.16/24]
              routes:
              - to : 10.0.2.0/24
                via: 10.0.2.2
            enp0s8:
                addresses: [192.168.101.2/24]
                dhcp4: false
                nameservers:
                  addresses: [8.8.8.8, 1.1.1.1]
                # routes:
                # -   to: default
                #     via: 192.168.101.1
            enp0s9:
                addresses:
                - 192.168.100.3/24
                routes:
                -  to: 192.168.102.0/24
                   via: 192.168.100.3


  tasks:
  - name: Apply netplan
    command: sudo netplan apply
    async: 10
    poll: 0
  - name: install Mysql
    become: yes
    ansible.builtin.apt:
      update_cache: yes
      name: 
       - mysql-server
       - mysql-client
       - python3-mysqldb
  - name: start SQL
    ansible.builtin.systemd:
      name: mysql
      state: started
      enabled: yes
  - name: Copy Mysql conf
    ansible.builtin.template:
      src: "./mysqld.cnf"
      dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"
  - name: Enable remote login to mysql
    lineinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      regexp: '^bind-address'
      line: 'bind-address = 0.0.0.0'
      backup: yes    
  - name: Restart service MYSQL, in all cases!!!!!
    ansible.builtin.systemd:
      name: mysql
      state: restarted
  - name: Create a new database with name 'wordpress_db'
    community.mysql.mysql_db:
      name: wordpress_db
      login_user: root
      state: present
  - name: Create user with password, all database privileges and 'WITH GRANT OPTION' in wordpress_db
    community.mysql.mysql_user:
      state: present
      name: wpuser
      password: password
      host: '%'
      priv: 
        'wordpress_db.*': 'ALL,GRANT'
  - name: Ensure root user can only login from localhost
    mysql_user:
#      login_password: "{{ mysql_root_password }}"
      check_implicit_admin: yes
      name: root
      host: "{{ item }}"
#      password: "{{ mysql_root_password }}"
      state: present
    with_items:
      - 0.0.0.0
