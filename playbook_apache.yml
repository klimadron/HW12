- hosts: apache
  any_errors_fatal: true
  become: yes
  become: true
  roles:
    - role: mrlesmithjr.netplan
      become: yes
      # This role will do nothing unless netplan_enabled is true.
      netplan_enabled: true
      
      # This should point to an existing netplan configuration file 
      # on your system which this role will overwrite, 
      # or to a nonexistent file which netplan is aware of.
      #
      # The default is /etc/netplan/config.yaml.
      netplan_config_file: /etc/netplan/50-vagrant.yaml
      
      # Ubuntu 18.04, for example, defaults to using networkd.
      netplan_renderer: networkd
      # Simple network configuration to add a single network interface.
      # Configuration defined bellow will be written to the file defined
      # above in `netplan_config_file`.
      netplan_configuration:
        network:
          version: 2
          renderer: networkd
          ethernets:
            enp0s3:
              addresses: [10.0.2.15/24]
              routes:
              - to : 10.0.2.0/24
                via: 10.0.2.2
              # dhcp4: true
              # match:
              #   macaddress: 02:e9:99:ad:26:c9
              # set-name: enp0s3
            enp0s8:
              addresses: [192.168.102.11/24]
              gateway4: 192.168.102.1
              nameservers:
                addresses: [8.8.8.8, 1.1.1.1]

            enp0s9:
              addresses: [192.168.100.2/24]
              routes:
              - to : 192.168.101.0/24
                via: 192.168.100.2
  tasks:
  - name: Apply netplan
    command: sudo netplan apply
    async: 10
    poll: 0
  - name: install Apache
    become: yes
    ansible.builtin.apt:
      name: 
       - apache2
       - mysql-client
       - ghostscript
       - ghostscript
       - libapache2-mod-php
       - php
       - php-curl
       - php-json
       - php-mbstring
       - php-mysql
       - php-xml
       - php-cgi
      update_cache: yes
      state: latest
  - name: start Apache
    ansible.builtin.systemd:
      name: apache2
      state: started
  - name: Download Wordpress
    unarchive:
      src: https://wordpress.org/latest.tar.gz
      dest: /var/www/html/
      remote_src: True    
  - name: Copy Apache conf
    ansible.builtin.template:
      src: "./apache2.conf"
      dest: "/etc/apache2/apache2.conf"
  - name: Copy Apache conf2
    ansible.builtin.template:
      src: "./000-default.conf"
      dest: "/etc/apache2/sites-available/000-default.conf"
  # - name: Copy using inline content
  #   ansible.builtin.copy:
  #     src: "./wp-config.php"
  #     dest: "/var/www/html/wordpress/wp-config.php"
  #     force: true

  - name: Change file ownership, group and permissions
    ansible.builtin.file:
      path: /var/www/html/wordpress/
      owner: www-data
      group: www-data
      mode: '755'   
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /var/www/html/wordpress/wp-content/uploads/
      state: directory
      owner: www-data
      group: www-data
      mode: '0755'   
  - name: Reload Apache
    ansible.builtin.systemd:
      name: apache2
      state: reloaded    
  
         

      
